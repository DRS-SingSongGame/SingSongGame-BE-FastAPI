name: Deploy FastAPI to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 가져오기
      - name: Checkout source
        uses: actions/checkout@v3

      # 2. AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. ECR 로그인
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      # 4. Docker 이미지 빌드 및 ECR 푸시
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_FASTAPI }}:${{ github.sha }} .
          docker push  ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_FASTAPI }}:${{ github.sha }}

      # 5. EC2에 SSH로 접속해서 컨테이너 실행
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.INSTANCE_HOST }}
          username: ubuntu
          key: ${{ secrets.INSTANCE_SSH_KEY }}
          script: |
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

            IMAGE_NAME="${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_FASTAPI }}:${{ github.sha }}"
            IMAGE_NAME=$(echo $IMAGE_NAME | tr -d '\n')  # ← 이거 추가!

            echo "IMAGE NAME = $IMAGE_NAME"

            docker pull "$IMAGE_NAME"
            docker stop fastapi || true
            docker rm fastapi || true

            docker run -d --name fastapi -p 8000:8000 \
              -e ACR_KEY="${{ secrets.ACR_KEY }}" \
              -e ACR_SEC="${{ secrets.ACR_SEC }}" \
              "$IMAGE_NAME"
